getwd
getwd()
read.csv("mydata.csv")
x<-4
x
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
dim(cbind(x,y))
x <- list(2, "a", "b", TRUE)
x[[2]]
x<-1:4
y<-2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
hw1_data <- read.csv("D:/Coursera/R Programming/Week 1/hw1_data.csv")
View(hw1_data)
hw1_data(1:2,)
hw1_data(1:2,, , )
x<-hw1_data
x[1:2,]
size(x)
dim(x)
dim(-1:-2,)
dim(-1:-2,,,,,)
dim(-1:2,,,,,)
dim(1:2,,,,,)
dim(x(-1:-2,))
dim(x[-1:-2,])
x[-1:-2,]
x[dim(x)-1:dim(x),]
x[dim(x)[1]-1:dim(x)[1],]
x[152:153]
x[152:153,]
x[47]
x[47,]
is.na(x)
dim(is.na(x))
bad<-is.na(x)
x[bad]
dim(x[bad])
dim[x[bad]]
k<-x[bad]
dim(k)
sizeof(k)
bad<-complete.cases(x)
x[!bad,][1:6]
x[is.na(x[,1])]
x[is.na(x[,2])]
d<-x[,2]
d<-x[,1]
bad<-is.na(d)
dim(bad)
bad
dim(is.true(d))
d[b]
d[k]
d
dim(d[k])
dim(!d[k])
dim(!)
dim(d)
length(k)
d-k
d
j<-d[!k]
j
j<-d(!k)
mean(d)
j<-complete.cases(d)
mean(j)
d[j]
mean(d[j])
good<-x[>31,,,>90]
good<-x[x>31,,,x>90]
good<-x[x>31,,,x>90,]
good<-x[x>31,,,x>90,,]
good<-x[,1]
d<-good[good>31]
d
d<-good[>31]
d<-good[good>31]
temp<-x[d]
d<-x[x[,1]>31]
d<-x[[x[,1]>31]]
d<-x[x[,1]]
d<-x(x[,1])
d<-x[1]
d
d<-x
d[1,2,4]
d[2]
d[d[5]=6]
d<-subset(x,x[1]>31&x[4]>90)
d
mean(d[2])
d[2]
k<-d[2]
mean(k)
average(k)
average(k[1])
mean(k[1])
mean(k[[1]])
k<-subset(x,x[5]=6)
k<-subset(x,x[[5]]=6)
k<-vector()
k<-subset(x,x[[5]]=6)
k<-subset(x,x[5]=6)
k<-subset(x,x[5]>6)
k<-subset(x,x[5]==6)
k
mean(k[4])
mean(k[[4]])
k<-subset(x,x[5]==5)
max(k[[1]])
clear
ccls
cls
install.packages("KernSmooth")
library(KernSmooth)
add2<-function(x,y){
x+y
}
add2(3,5)
above<- function(x,n){
use <- x > n
x[use]
}
x<-1:10
x<-1:20
above(x,10)
above<- function(x,n=1-){
use <- x > n
x[use]
}
above<- function(x,n=10){
use <- x > n
x[use]
}
above(x)
cube <- function(x, n) {
x^3
}
cube(3)
cube(3,2)
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
formals(above)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
clear
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h
h(1)
lm
search()
lm<-function(x){}
lm<-function(x){x*x}
lm
getwd()
setwd("D:/Coursera/Exploratory Data Analysis/")
getwd()
setwd("D:/Coursera/Exploratory Data Analysis/Project 2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI)
head(SCC)
summary(NEI)
str(NEI)
dir()
head(nei$Emissions)
head(NEI$Emissions)
tail(NEI$Emissions)
NEI$year <- factors(NEI$year)
NEI$year <- factor(NEI$year)
str(NEII)
str(NEI)
mean(NEI$Emissions)
mean(NEI$Emissions[NEI$year==1])
mean(NEI$Emissions[NEI$year==1999])
mean(NEI$Emissions[NEI$year==2002])
mean(NEI$Emissions[NEI$year==2005])
mean(NEI$Emissions[NEI$year==2008])
mean(NEI$Emissions[NEI$year])
str(NEI)
levels(NEI$year)
library(dplyr)
library(hflights)
names(hflights)
install.packages("dplyr")
install.packages("dplyr")
library(hflights)
names(hflights)
#install.packages("dplyr", dependencies = TRUE)
require('dplyr') #uncomment and run previous line if error is generated
library(hflights)
hflights %>%
mutate(delayFlag = ifelse(DepDelay > 0,1,0)) %>%
group_by(DayOfWeek) %>%
summarise(pctDelay = mean(delayFlag, na.rm = TRUE),count = n()) %>%
filter(count > 30000) %>%
arrange(desc(pctDelay))
install.packages("hflights")
names(hflights)
#install.packages("dplyr", dependencies = TRUE)
require('dplyr') #uncomment and run previous line if error is generated
library(hflights)
hflights %>%
mutate(delayFlag = ifelse(DepDelay > 0,1,0)) %>%
group_by(DayOfWeek) %>%
summarise(pctDelay = mean(delayFlag, na.rm = TRUE),count = n()) %>%
filter(count > 30000) %>%
arrange(desc(pctDelay))
sum(NEI$emission[nei$year==1999])
sum(NEI$emission[NEI$year==1999])
sum(NEI$emission[NEI$year==1999],na.rm=true)
sum(NEI$emission[NEI$year==1999],na.rm=TRUE)
complete.cases(NEI$Emissions)
sum(NEI$Emissions[NEI$year==1999],na.rm=TRUE)
sum(NEI$Emissions[NEI$year==1999],na.rm=TRUE)
sum(NEI$Emissions[NEI$year==2002],na.rm=TRUE)
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/foxfaplot.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/Plot1.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
bal<-NEI[NEI$fips==24510]
bal<-NEI[NEI$fips==24510,]
bal
mean(bal$Emissions[bal$year=1999])
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
mean(bal$Emissions[bal$year==1999])
sum(bal$Emissions[bal$year==1999])
sum(bal$Emissions[bal$year==2002])
sum(bal$Emissions[bal$year==2005])
sum(bal$Emissions[bal$year==2008])
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/foxfaplot.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/foxfaplot.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot2.R')
NEI$type<-factor(NEI$type)
bal <- subset(NEI,NEI$fips==25410)
bal<-NEI[NEI$fips==24510]
bal<-NEI[NEI$fips==24510,]
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot3.R')
install.packages(ggplo2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot3.R')
source('D:/Coursera/Exploratory Data Analysis/Project 2/plot3.R')
getwd()
setwd("D:/Coursera/Getting and Cleaning Data/Project")
setwd("D:/Coursera/Getting and Cleaning Data/Project1")
getwd()
dir()
source('D:/Coursera/Getting and Cleaning Data/Project1/UCI HAR Dataset/run_analysis.R')
setwd("D:/Coursera/Getting and Cleaning Data/Project1/UCI HAR Dataset")
source('D:/Coursera/Getting and Cleaning Data/Project1/UCI HAR Dataset/run_analysis.R')
